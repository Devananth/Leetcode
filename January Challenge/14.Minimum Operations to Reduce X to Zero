class Solution {
public:
    int minOperations(vector<int>& nums, int x) {
        
        int n = nums.size() , target = accumulate(nums.begin() , nums.end() , 0 ) , sum = 0 ,ans = INT_MIN;
        
        target-=x;
        
        if(!target)
            return n;
        
        unordered_map<int,int> mp;
        
        for(int i = 0 ; i<n ; i++)
        {
            sum+=nums[i];
                        
            if(sum==target)
                ans = i+1;
            
            if(mp.find(sum-target)!=mp.end())
                ans = max(ans , i - mp[sum-target]);
            
            mp[sum]=i;
                
        }
        
        
        return ((ans==INT_MIN)? -1 : n-ans);
        
        
    }
};
