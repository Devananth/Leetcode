/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode *ansHead = NULL , *ansTail = NULL;
        
        int carry = 0 ;
        
        while(l1 || l2)
        {
            int val1 = (l1)? l1->val : 0;
            
            int val2 = (l2)? l2->val : 0;
            
            ListNode* newNode = new ListNode((val1+val2+carry)%10);
            
            carry = (val1+val2+carry)/10 ;
            
            if(!ansHead)
                ansHead = newNode;
            else
                ansTail->next = newNode;
            
            ansTail = newNode;
            
            if(l1)            
            l1 = l1->next;
            
            if(l2)
            l2 = l2->next;
        }
        
        while(carry)
        {
            ListNode* newNode = new ListNode(carry%10);
            
            carry/=10;
            
            if(!ansHead)
                ansHead = newNode;
            else
                ansTail->next = newNode;
            
            ansTail = newNode;
            
        }
        
        return ansHead;
        
    }
};
